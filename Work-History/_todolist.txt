

------------------
# 할만한 것(개발)
- 페이지 스크랩하여 분류해놓고 저장하는 기능.
- 임시메모를 위한 단순한 메모장
- 로그인한(+익명) 접속한 사용자에 대한 목록 보여주기. (업그레이드로 채팅방까지?)
- 내 글에 대한  구독 등록하면 글업로드시 이메일로 쏴주기....(혹은 스크랩?)
- 소셜 웹 app의 기능을 사용할 수 있는 페이지.(로그인, 새글 확인, 스크랩? 등)

----------------------------------------

------------------
# todolist : 당장은 급하지 않지만 해결할만한 문제들.

///////////////////////////////////////////////////////////
  # 필요시에 할만한 것.
[]
- app.js 코드에서 역할별로 분리한(환경설정, 미들웨어 사용설정, url매핑) 부분을 객체화 시키는 것 고려.

[]
 1) 소셜 서비스를 이용하기 위해 발급받은 api 키와, 비밀번호는 왜 노출되면 안되는지 찾아볼것.

[]
 1) User클래스의 생성자를 유연하게 고칠수 없을까.(오버로딩을 하기에는 동적타입시스템이라 무엇을 기준으로 할지 모르겠다. 아니면 타입을 만들어?)
 2) User클래스의 스키마가 중복되는 상황을 처리하고 싶다.
 3) db서버가 시작하되야지 웹 서버도 실행되도록. 연결시켜야함.

[]
 - package.json 의존성 파일 중 쓸모없는 것 제거하기.

[]
 - mvc아키텍쳐로 분리한 김에. routes만 이름을 controller로 바꾸면 형태가 같아질텐데. 고려해볼만함.

[]
 - blogServiceTest.. 독립적으로 할때는 문제없지만 run.js에서 돌리면 문제가 생김. 내 생각에는 전역변수이름이 같아서 그런것같은데?
   : 일단 두고.. 나중에 run.js말고 제대로 된 방법으로 통합테스트를 수행하면 괜찮지 않을까.

[]
  - Post4web , Board, Blog
    : db의 데이터를 가져온 후 웹에 사용할 때, 규칙적인 틀 안에서 사용하기 위해 만듬.
      하지만 정말 필요하지 않는 것 같고, 특히 Post4Web같은 경우에는 이상한 이름을 가졌다. 
    ; 참조를 실제 데이터로 만드는 것. 필요할까.  조인이 없으므로 필요는 하지만 저런 타입의 형태까지 만든 것은 과한 것 같다.
      - DAO에서. insert할때는 참조를 저장하고, find할때는 실제 데이터가 바인딩된 형태를 가져오면 어떨까.

[]
   - 삭제 동작 고민해봐야 한다.
    : 현재 post삭제시 포함되는 댓글은 삭제되지 않는다.
    : 현재 댓글 삭제시 포함되는 댓글은 삭제된다. 
      ==> 삭제시 삭제되데 사용자 페이지에서 영구삭제와(이때 다시물어보기) 복구가능.

   - url매칭 실패시.
    : routeManager가 url바인딩 후 마지막 동작으로 실패 주소 매칭을 하면 좋겠군. 
      ; 리다이렉트? 아니면 에러메시지?  

[] 불필요한 의존성 node_modules , package.json 
e: 사용하지 않은 것들이 깔려있을 뿐. 나중에 배포시 문제가 될 것 같지만 지금은 상관없다.
=r :ㅇㅋ

[] 패키지(폴더)명에 s를 붙인것.
e:당장 중요하지는 않다. 보기싫은 것뿐.
=r : ㅇㅋ

[] : 프론트 엔드 환경에서 모듈로더를 사용한 것.
  - 비동기 호출 + importModule의 실행부, modules부가 뭉쳐있기에 현재 단일 importModule밖에 사용 못한다.
    
  - 해결방안
   ; 애초에 모듈의 모든 주소를 기록해놓고, namespace가 그것을 알게 한다. 그리고 import할 때, 없으면 호출하도록 만든다.
   or 모든 자바스크립트 로딩하되 실행되지 않게 만들고, 제일 마지막에 실행되도록. 공통의 실행방법을 부여해야함.
   or ;importModule을 분리하고 로딩을 제일 마지막에 하여 실행을 모음
e: 시간이 너무 걸리므로.. 현재는 이정도에서 넘어가자. 프론트엔드 자바스크립트 규모가 더 커지면 고민해볼만하다.
=r: 지금은 규모가 작으니까 그래.


===================================
/////////////////////////////////////////////////////////////
	[완료 - 20140516]
- 프로젝트 디렉토리를 정리. 
- bower_components, node_modules를 github에서 제외시키기.
- bower install bootstrap 결과 생긴 불필요한 소스코드 등을 제외시켜야한다. 
  그리고 bootstrap은 정적라이브러리이므로 public 디렉토리에 들어가야한다 
  *** 일단은 실행이 느려져서 bower_components를 제거하고 부트스트랩에 필요한 라이브러리만 public에 위치시켰다.
# 기타 등등
 - enide의 jshint 를 없에고 싶 다.  // nodeclipse plug in 으로 설치해서 jshint 제거해버림.
