

----------------------------------------
# 할 것.
 
 0) file upload, download , 테스트 케이스에서 폴더안의 모든 .txt 파일 지웅기. 
 1) 기본게시판. 카테고리 포함시키기.
 2) 회원 페이지. 사용자가 올린 글, 댓글 확인할 수 있는 기능.
 3) client javascript 파일 분할 + constant.js( js, html에서 같이 사용되는 id 같은것 모아두기 위한 파일)
 4) 이전에 한 스프링 컨트롤러 코드보고 restfull uri로 변경하기.
=================================

# 한 것.
 - 파일 업로드 기능과 post insert페이지. 아직 다운로드 안함. 
 - 클라이언트 자바 스크립트 조금 분할시킴.
 - 자료구조.에서 혼란이 왔다. 아래와 같은 형태에서. 어떻게 해야하지. 
   ; post, answer애매하다. post나 answer나 같은 글인것같은데....... 조금 더 있고, 없을 뿐인데..이걸 구분을 어떻게 해야하지. 어떻게 사용해야하지?
   ; userId같은 것으로 참조만 유지하는 것 타입은 사용시에 참조가 가진 실제 데이터를 집어넣어야 하는데. 
     그렇다면 이 자료구조를 확장해서 사용해야하나? 아니면 새로운 형태를 사용해야할까. 애초에 이걸 생각해 두었어야하는데.
     다행히 테스트들이 있으니... 잘 고민해서 해결해보자.

   ; 어차피 웹쪽에서는 데이터를 하나하나 골라서 뿌려줄것이기에.  그대로 확장해서 사용하자.
 뿌리기    -> db rawData -> domain객체 -> 각 필요한 참조를 db에서 가져온 후 실제 객체로 생성한 후 할당.. -> 웹페이지에 뿌리고.. 일끝났으니 해제.
 저장히기 ->웹페이지에서 가져오고....db까지...이건 각 도메인 객체로 잘 만들어서 db에 넣기.

  
 

 - Blog
   - loginUser
   - boards

 - Board
    - posts
    - pager

  - Post
     - user
     - answers
     - post(자기 글)
  - Answer
   - user
   - answers
   - post(자기 글)
   - postNum....(부모 )
 